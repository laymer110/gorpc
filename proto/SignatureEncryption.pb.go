// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.1
// source: SignatureEncryption/SignatureEncryption.proto

package gorpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EncryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method      string `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`           //GET|POST
	InputString string `protobuf:"bytes,2,opt,name=InputString,proto3" json:"InputString,omitempty"` //输入数据
	Key         string `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`                 //秘钥
	Token       string `protobuf:"bytes,4,opt,name=Token,proto3" json:"Token,omitempty"`             //传入用户鉴权信息
	WorkType    string `protobuf:"bytes,5,opt,name=WorkType,proto3" json:"WorkType,omitempty"`       //工作负载
	Salt        string `protobuf:"bytes,6,opt,name=Salt,proto3" json:"Salt,omitempty"`               //md5签名盐
}

func (x *EncryptRequest) Reset() {
	*x = EncryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignatureEncryption_SignatureEncryption_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptRequest) ProtoMessage() {}

func (x *EncryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SignatureEncryption_SignatureEncryption_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptRequest.ProtoReflect.Descriptor instead.
func (*EncryptRequest) Descriptor() ([]byte, []int) {
	return file_SignatureEncryption_SignatureEncryption_proto_rawDescGZIP(), []int{0}
}

func (x *EncryptRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *EncryptRequest) GetInputString() string {
	if x != nil {
		return x.InputString
	}
	return ""
}

func (x *EncryptRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *EncryptRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *EncryptRequest) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *EncryptRequest) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

type EncryptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"` //结果
	OutData string `protobuf:"bytes,2,opt,name=OutData,proto3" json:"OutData,omitempty"`  //输出结果
}

func (x *EncryptResponse) Reset() {
	*x = EncryptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignatureEncryption_SignatureEncryption_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptResponse) ProtoMessage() {}

func (x *EncryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_SignatureEncryption_SignatureEncryption_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptResponse.ProtoReflect.Descriptor instead.
func (*EncryptResponse) Descriptor() ([]byte, []int) {
	return file_SignatureEncryption_SignatureEncryption_proto_rawDescGZIP(), []int{1}
}

func (x *EncryptResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EncryptResponse) GetOutData() string {
	if x != nil {
		return x.OutData
	}
	return ""
}

type DecryptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method      string `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`           //GET|POST
	InputString string `protobuf:"bytes,2,opt,name=InputString,proto3" json:"InputString,omitempty"` //输入数据
	Key         string `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`                 //秘钥
	Token       string `protobuf:"bytes,4,opt,name=Token,proto3" json:"Token,omitempty"`             //传入用户鉴权信息
	Salt        string `protobuf:"bytes,5,opt,name=Salt,proto3" json:"Salt,omitempty"`               //md5签名盐
}

func (x *DecryptRequest) Reset() {
	*x = DecryptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignatureEncryption_SignatureEncryption_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptRequest) ProtoMessage() {}

func (x *DecryptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_SignatureEncryption_SignatureEncryption_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptRequest.ProtoReflect.Descriptor instead.
func (*DecryptRequest) Descriptor() ([]byte, []int) {
	return file_SignatureEncryption_SignatureEncryption_proto_rawDescGZIP(), []int{2}
}

func (x *DecryptRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *DecryptRequest) GetInputString() string {
	if x != nil {
		return x.InputString
	}
	return ""
}

func (x *DecryptRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DecryptRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DecryptRequest) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

type DecryptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkType string `protobuf:"bytes,1,opt,name=WorkType,proto3" json:"WorkType,omitempty"` //工作负载
	OutData  string `protobuf:"bytes,2,opt,name=OutData,proto3" json:"OutData,omitempty"`   //输出结果
	Timestap string `protobuf:"bytes,3,opt,name=Timestap,proto3" json:"Timestap,omitempty"` //包含的时间
}

func (x *DecryptResponse) Reset() {
	*x = DecryptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_SignatureEncryption_SignatureEncryption_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptResponse) ProtoMessage() {}

func (x *DecryptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_SignatureEncryption_SignatureEncryption_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptResponse.ProtoReflect.Descriptor instead.
func (*DecryptResponse) Descriptor() ([]byte, []int) {
	return file_SignatureEncryption_SignatureEncryption_proto_rawDescGZIP(), []int{3}
}

func (x *DecryptResponse) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *DecryptResponse) GetOutData() string {
	if x != nil {
		return x.OutData
	}
	return ""
}

func (x *DecryptResponse) GetTimestap() string {
	if x != nil {
		return x.Timestap
	}
	return ""
}

var File_SignatureEncryption_SignatureEncryption_proto protoreflect.FileDescriptor

var file_SignatureEncryption_SignatureEncryption_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x6f, 0x72,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x6f, 0x72,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x61, 0x6c, 0x74, 0x22, 0x45, 0x0a, 0x0f, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x86, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x61, 0x6c, 0x74, 0x22, 0x63, 0x0a, 0x0f, 0x44, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x57, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x57, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x75, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x75, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x70, 0x32, 0xc5,
	0x01, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x07, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x12, 0x23, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56,
	0x0a, 0x07, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x23, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x67, 0x6f, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_SignatureEncryption_SignatureEncryption_proto_rawDescOnce sync.Once
	file_SignatureEncryption_SignatureEncryption_proto_rawDescData = file_SignatureEncryption_SignatureEncryption_proto_rawDesc
)

func file_SignatureEncryption_SignatureEncryption_proto_rawDescGZIP() []byte {
	file_SignatureEncryption_SignatureEncryption_proto_rawDescOnce.Do(func() {
		file_SignatureEncryption_SignatureEncryption_proto_rawDescData = protoimpl.X.CompressGZIP(file_SignatureEncryption_SignatureEncryption_proto_rawDescData)
	})
	return file_SignatureEncryption_SignatureEncryption_proto_rawDescData
}

var file_SignatureEncryption_SignatureEncryption_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_SignatureEncryption_SignatureEncryption_proto_goTypes = []interface{}{
	(*EncryptRequest)(nil),  // 0: SignatureEncryption.EncryptRequest
	(*EncryptResponse)(nil), // 1: SignatureEncryption.EncryptResponse
	(*DecryptRequest)(nil),  // 2: SignatureEncryption.DecryptRequest
	(*DecryptResponse)(nil), // 3: SignatureEncryption.DecryptResponse
}
var file_SignatureEncryption_SignatureEncryption_proto_depIdxs = []int32{
	0, // 0: SignatureEncryption.SignatureEncryption.Encrypt:input_type -> SignatureEncryption.EncryptRequest
	2, // 1: SignatureEncryption.SignatureEncryption.Decrypt:input_type -> SignatureEncryption.DecryptRequest
	1, // 2: SignatureEncryption.SignatureEncryption.Encrypt:output_type -> SignatureEncryption.EncryptResponse
	3, // 3: SignatureEncryption.SignatureEncryption.Decrypt:output_type -> SignatureEncryption.DecryptResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_SignatureEncryption_SignatureEncryption_proto_init() }
func file_SignatureEncryption_SignatureEncryption_proto_init() {
	if File_SignatureEncryption_SignatureEncryption_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_SignatureEncryption_SignatureEncryption_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignatureEncryption_SignatureEncryption_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignatureEncryption_SignatureEncryption_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_SignatureEncryption_SignatureEncryption_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_SignatureEncryption_SignatureEncryption_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_SignatureEncryption_SignatureEncryption_proto_goTypes,
		DependencyIndexes: file_SignatureEncryption_SignatureEncryption_proto_depIdxs,
		MessageInfos:      file_SignatureEncryption_SignatureEncryption_proto_msgTypes,
	}.Build()
	File_SignatureEncryption_SignatureEncryption_proto = out.File
	file_SignatureEncryption_SignatureEncryption_proto_rawDesc = nil
	file_SignatureEncryption_SignatureEncryption_proto_goTypes = nil
	file_SignatureEncryption_SignatureEncryption_proto_depIdxs = nil
}
